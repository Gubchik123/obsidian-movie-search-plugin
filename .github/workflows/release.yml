name: Release Obsidian plugin

on:
    push:
        branches:
            - master
        paths:
            - "**/*.ts"
            - "style.css"
            - "manifest.json"

env:
    PLUGIN_NAME: movie-search

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version-file: ".nvmrc"
                  cache: "yarn"
            - run: yarn install --frozen-lockfile

            - name: Build
              id: build
              run: |
                  yarn build
                  mkdir ${{ env.PLUGIN_NAME }}
                  cp main.js manifest.json styles.css ${{ env.PLUGIN_NAME }}
                  zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
                  ls
                  echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"

            - name: Get version
              id: package
              run: |
                  echo "::set-output name=version::$(node -p "require('./package.json').version")"
              shell: bash

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  VERSION: ${{ steps.package.outputs.version }}
              with:
                  tag_name: ${{ steps.package.outputs.version }}
                  release_name: ${{ steps.package.outputs.version }} release
                  draft: false
                  prerelease: false

            # - name: Upload zip file
            #   id: upload-zip
            #   uses: actions/upload-release-asset@v1
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #   with:
            #       upload_url: ${{ steps.create_release.outputs.upload_url }}
            #       asset_path: ./${{ env.PLUGIN_NAME }}.zip
            #       asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.build.outputs.tag_name }}.zip
            #       asset_content_type: application/zip

            - name: Upload main.js
              id: upload-main
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./main.js
                  asset_name: main.js
                  asset_content_type: text/javascript

            - name: Upload manifest.json
              id: upload-manifest
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./manifest.json
                  asset_name: manifest.json
                  asset_content_type: application/json

            - name: Upload styles.css
              id: upload-css
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./styles.css
                  asset_name: styles.css
                  asset_content_type: text/css
